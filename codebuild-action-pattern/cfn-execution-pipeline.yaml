AWSTemplateFormatVersion: "2010-09-09"

Description: CodePipeline to execute CloudFormation CICD.

Parameters:
  CodeCommitName:
    Type: String

  CfnStackName:
    Type: String

  CfnTemplatePath:
    Type: String

  CfnConfigFilePath:
    Type: String    

Resources:

  # -----------------------------------------------------------------
  # CodePipeline
  # -----------------------------------------------------------------

  # CodePipeline
  CfnPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: cfn-execution-pipeline
      ArtifactStore: 
        Type: S3
        Location: !Ref ArtifactStore
        EncryptionKey: 
          Type: KMS
          Id: !GetAtt ArtifactStoreKey.KeyId
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName: !Ref CodeCommitName
                BranchName: main
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: source-artifact
              RoleArn: !GetAtt CodePipelineActionSourceRole.Arn
        -  Name: CI
           Actions:
            - Name: CI
              Namespace: cfn-execution-pipeline
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildActionCI
              InputArtifacts:
                - Name: source-artifact
              RoleArn: !GetAtt CodePipelineActionCIRole.Arn
        -  Name: CreateChangeSet
           Actions:
            - Name: CreateChangeSet
              Namespace: cfn-execution-pipeline
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildActionCreateChangeSet
              InputArtifacts:
                - Name: source-artifact
              RoleArn: !GetAtt CodePipelineActionCreateChangeSetRole.Arn
        -  Name: Approve
           Actions:
            - Name: Approve
              Namespace: cfn-execution-pipeline
              ActionTypeId:
                Owner: AWS
                Category: Approval
                Version: 1
                Provider: Manual
        -  Name: Deploy
           Actions:
            - Name: Deploy
              Namespace: cfn-execution-pipeline
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildActionDeploy
              InputArtifacts:
                - Name: source-artifact
              RoleArn: !GetAtt CodePipelineActionDeployRole.Arn       

  ### IAM Role - CodePipeline service role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codepipeline-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline service role.

  CodePipelineServiceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codepipeline-service-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowAssumeRole
            Effect: Allow
            Action: sts:AssumeRole
            Resource: 
              - !GetAtt CodePipelineActionSourceRole.Arn
              - !GetAtt CodePipelineActionCIRole.Arn
              - !GetAtt CodePipelineActionCreateChangeSetRole.Arn
              - !GetAtt CodePipelineActionDeployRole.Arn
      Roles:
        - !Ref CodePipelineServiceRole

  ### IAM Role - CodePipeline action role: Source
  CodePipelineActionSourceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codepipeline-action-source-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodePipelineServiceRole.Arn
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline action role - source.

  CodePipelineActionSourceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codepipeline-action-source-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCodeCommitAccess
            Effect: Allow
            Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              - codecommit:CancelUploadArchive
            Resource:
              - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitName}"
          - Sid: AllowArtifactStoreAccess
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
            Resource: !Sub
              - ${S3Arn}/*
              - S3Arn: !GetAtt ArtifactStore.Arn
          - Sid: AllowKMSAccess
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDatakey*
            Resource: !GetAtt ArtifactStoreKey.Arn
      Roles:
        - !Ref CodePipelineActionSourceRole
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - I3042

  ### IAM Role - CodePipeline action role: CI
  CodePipelineActionCIRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codepipeline-action-ci-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodePipelineServiceRole.Arn
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline action role - CI.

  CodePipelineActionCIRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codepipeline-action-ci-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCodeBuildAccess
            Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Resource:
              - !GetAtt CodeBuildActionCI.Arn
      Roles:
        - !Ref CodePipelineActionCIRole

  ### IAM Role - CodePipeline action role: CreateChangeSet
  CodePipelineActionCreateChangeSetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codepipeline-action-create-change-set-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodePipelineServiceRole.Arn
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline action role - CreateChangeSet.

  CodePipelineActionCreateChangeSetRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codepipeline-action-create-change-set-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCodeBuildAccess
            Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Resource:
              - !GetAtt CodeBuildActionCreateChangeSet.Arn
      Roles:
        - !Ref CodePipelineActionCreateChangeSetRole

  ### IAM Role - CodePipeline action role: Deploy
  CodePipelineActionDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codepipeline-action-deploy-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodePipelineServiceRole.Arn
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline action role - Deploy.

  CodePipelineActionDeployRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codepipeline-action-deploy-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCodeBuildAccess
            Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Resource:
              - !GetAtt CodeBuildActionDeploy.Arn
      Roles:
        - !Ref CodePipelineActionDeployRole

  # -----------------------------------------------------------------
  # Artifact store
  # -----------------------------------------------------------------

  ### S3
  ArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub cfn-execution-pipeline-artifact-store-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref ArtifactStoreKey
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ### KMS
  ArtifactStoreKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/cfn-pipeline-artifact-store-key
      TargetKeyId: !Ref ArtifactStoreKey

  ArtifactStoreKey:
    Type: AWS::KMS::Key
    Properties:
      Description: For cfn pipeline artifact store
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCodeCommitAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: '*'
            Resource: '*'
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - I3042

  # ----------------------------------------------------------------
  # CodeBuild - CI action
  # -----------------------------------------------------------------

  ### CodeBuild for CI action
  CodeBuildActionCI:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: cfn-pipeline-ci-action
      Description: For cfn pipeline CI action.
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CFN_TEMPLATE_PATH
            Value: !Ref CfnTemplatePath
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildActionCIRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |-
          version: 0.2

          phases:
            build:
              commands:
                - ls
                

  ### IAM Role for CI action
  CodeBuildActionCIRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codebuild-action-ci-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: IAM Role for CodePipeline action role - CI.

  CodeBuildActionCIRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codebuild-action-ci-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudWatchAccess
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - '*'
          - Sid: AllowArtifactStoreAccess
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub
              - ${S3Arn}/*
              - S3Arn: !GetAtt ArtifactStore.Arn
          - Sid: AllowKMSAccess
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDatakey*
            Resource: !GetAtt ArtifactStoreKey.Arn
      Roles:
        - !Ref CodeBuildActionCIRole

  # -----------------------------------------------------------------
  # CodeBuild - CreateChangeSet action
  # -----------------------------------------------------------------

  ### CodeBuild for CreateChangeSet action
  CodeBuildActionCreateChangeSet:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: cfn-pipeline-create-change-set-action
      Description: For cfn pipeline CreateChangeSet action.
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        # EnvironmentVariables:
        #   - Name: CFN_STACK_NAME
        #     Value: !Ref CfnStackName
        #   - Name: CFN_TEMPLATE_PATH
        #     Value: !Ref CfnTemplatePath
        #   - Name: CFN_CONFIG_FILE_PATH
        #     Value: !Ref CfnConfigFilePath
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildActionCreateChangeSetRole
      Source:
        Type: CODEPIPELINE
        # TODO: Somewhat 'aws cloudformation deploy' returns 'string index out of range' error only exec on CodeBuild.
        BuildSpec: !Sub |-
          version: 0.2

          env:
            exported-variables:
              - CHANGE_SET_NAME
          phases:
            build:
              commands:
                - | 
                  RESULT_MESSAGE=`aws cloudformation deploy \
                  --stack-name ${CfnStackName} \
                  --template-file ${CfnTemplatePath} \
                  --parameter-overrides file://${CfnConfigFilePath} \
                  --capabilities CAPABILITY_NAMED_IAM \
                  --no-execute-changeset`
                # Extract describe command.
                # Result of deploy commnad is like
                # 
                # Waiting for changeset to be created..
                # Changeset created successfully. Run the following command to review changes:
                # aws cloudformation describe-change-set --change-set-name XXXX
                - DESCRIBE_COMMAND=`echo $RESULT_MESSAGE | tail -1`
                - ${!DESCRIBE_COMMAND}
            post_build:
              commands:
                - export CHANGE_SET_NAME=`${!DESCRIBE_COMMAND} | jq -r ".ChangeSetName"`
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1019

  ### IAM Role for CreateChangeSet action
  CodeBuildActionCreateChangeSetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codebuild-action-create-change-set-role
      Description: IAM Role for CodePipeline action role - CreateChangeSet.
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole

  CodeBuildActionCreateChangeSetRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cfn-pipeline-codebuild-action-create-change-set-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudWatchAccess
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - '*'
          - Sid: AllowArtifactStoreAccess
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub
              - ${S3Arn}/*
              - S3Arn: !GetAtt ArtifactStore.Arn
          - Sid: AllowKMSAccess
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDatakey*
            Resource: !GetAtt ArtifactStoreKey.Arn
          - Sid: AllowCloudFormationAccess
            Effect: Allow
            Action:
              - cloudformation:ListStacks
              - cloudformation:DescribeStacks
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
            Resource:
              - '*'
      Roles:
        - !Ref CodeBuildActionCreateChangeSetRole

  # -----------------------------------------------------------------
  # CodeBuild - Deploy action
  # -----------------------------------------------------------------

  ### CodeBuild for Deploy action
  CodeBuildActionDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: cfn-pipeline-deploy-action
      Description: For cfn pipeline Deploy action.
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildActionDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |-
          version: 0.2

          phases:
            build:
              commands:
                - aws cloudformation execute-change-set \
                  --stack-name ${CfnStackName} \
                  --change-set-name ${!cfn-execution-pipeline.CHANGE_SET_NAME}

  ### IAM Role for Deploy action
  CodeBuildActionDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cfn-pipeline-codebuild-action-deploy-role
      Description: IAM Role for CodePipeline action role - Deploy.
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
